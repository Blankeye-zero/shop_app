import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import '../secrets/constants.dart';

class Auth with ChangeNotifier {
  String
      _token; //this is a temporary token variable that holds the token generated by the backend, in our case, firebase.
  DateTime _expiryDate; //stores the expiry DateTime
  String _userId;

  bool get isAuth {
    //logic to return boolean
    return token != null;
  }

  String get token {
    if (_expiryDate != null &&
        _expiryDate.isAfter(DateTime.now()) &&
        _token != null) {
      return _token;
    }
    print('no token....');
    return null;
  }

  //method used to sign the user up

  Future<void> _authenticate(
      String email, String password, String urlPart) async {
    //for info - https://firebase.google.com/docs/reference/rest/auth/
    try {
      final url = Uri.https(
          'identitytoolkit.googleapis.com', 'v1/accounts:$urlPart', A.param);
      final response = await http.post(
        url,
        body: json.encode(
          {'email': email, 'password': password, 'returnSecureToken': true},
        ),
      );
      final responseData = json.decode(response.body);
      if (responseData['error'] != null) {
        throw HttpException(responseData['error']['message']);
      }
      _token = responseData['idToken'];
      _userId = responseData['localId'];
      _expiryDate = DateTime.now().add(
        Duration(
          seconds: int.parse(responseData['expiresIn']),
        ),
      );
      notifyListeners();
    } catch (e) {
      // Throw error
      print(e);
      throw (e);
    }
  }

  Future<void> signup(String email, String password) async {
    await _authenticate(email, password, 'signUp');
  }

  Future<void> login(String email, String password) async {
    await _authenticate(email, password, 'signInWithPassword');
  }
}
